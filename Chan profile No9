def tuning_var(s):
    s_rho = s['rho'] / 10                        # _rho (mm -> cm)
    s_src = s[s.index.str.endswith('src')]       # _src
    s_dst = s[s.index.str.endswith('dst')]       # _dst    

    # index 표준화
    set_index = s_src.index.str.split('_').str[0]
    s_src.index = set_index
    s_dst.index = set_index

    #lambert beer 법칙
    # T(투광도) = I(투과방사선)/I0(입사방사선)
    # A(흡광도) = -log(T)  
    #           = ε(흡광계수) ⋅ b(투과 경로 길이(cm)) ⋅ c(몰농도)
    #           = 2 - log(%T) ***
    #           = log(1/T)
    
    # 투광도 = I(투과방사선)/I0(입사방사선)
    transmittance = s_dst / s_src
    
    # 계산 완료후 inf,nan 0으로 치환
    transmittance = [i if i != np.inf else 0.0 for i in transmittance ]
    transmittance = Series(transmittance).fillna(value = 0)

    # math.log 계산을 위해 0을 1로 치환후 계산(흡광계수는 1로 가정한다.)
    transmittance = Series([1 if i == 0 else i for i in transmittance ])
    
    #흡광도_1 : -log10(I(투과방사선)/I0(입사방사선))
    absorbance_1 = Series(map(lambda x : (-math.log(x,10)),transmittance))
    
    #흡광도_2 :  ε(흡광계수) ⋅ b(투과 경로 길이(cm)) ⋅ c(농도) (농도는 1로 가정) 
    # 흡광계수는 감쇠계수로 사용
    c = 1
    final_len = (s_rho) + (2.9 / 10)   # 측정길이 + 조직별 감쇠계수의 측적 길이
    absorbance_2 = Series(((ac_nir1) * final_len * c))
    
    # 흡광도 index 설정
    absorbance_1.index = set_index.map(lambda x : 'A1_' + x)
    absorbance_2.index = ['A2_rho']
    
    # 두 Series의 병합
    out_s = Series()
    out_s = out_s.append(absorbance_2).append(absorbance_1)
    
    return(out_s)
